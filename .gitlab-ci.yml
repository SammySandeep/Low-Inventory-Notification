image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  CONTAINER_IMAGE: registry.klocapps.com/shopify/shopify-kloc-low-inventory-notification-app:$CI_COMMIT_SHORT_SHA
  STAGING_DOMAIN: staging-lina.klocapps.com
  PRODUCTION_DOMAIN: lina.klocapps.com
  
stages:
  - build
  - staging
  - production

before_script:
  - docker login -u $DOCKER_USERNAME -p $DOCKER_LOGIN registry.klocapps.com
  
.ssh_template: &ssh_definition
   - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
   - eval $(ssh-agent -s)
   
.ssh_and_known_host_modification_template: &ssh_and_known_host_modification_definition
   - mkdir -p ~/.ssh
   - chmod 700 ~/.ssh
   - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
   
.only-default: &only-default
  only:
    - master

build:
  stage: build
  script:
   - docker build -t $CONTAINER_IMAGE .
   - docker push $CONTAINER_IMAGE
  <<: *only-default

main_app_deploy_staging:
  stage: staging
  variables:
    DOMAIN: $STAGING_DOMAIN
  script:
   - *ssh_definition
   - echo "$S0_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - *ssh_and_known_host_modification_definition
   - ssh kloc-admin@68.183.244.235 "cd shopify-kloc-low-inventory-notification-app/ && git pull"
   - ssh kloc-admin@68.183.244.235 "sudo echo "TAG=$CI_COMMIT_SHORT_SHA"$'\n'"DB_POOL_THREADS=$DB_POOL_THREADS"$'\n'"LINA_DATABASE_NAME=$LINA_DATABASE_NAME"$'\n'"LINA_DATABASE_USERNAME=$LINA_DATABASE_USERNAME"$'\n'"LINA_DATABASE_PASSWORD=$LINA_DATABASE_PASSWORD"$'\n'"HOST=$S_HOST"$'\n'"DB_PORT=$DB_PORT"$'\n'"SHOPIFY_API_KEY=$S_SHOPIFY_API_KEY"$'\n'"SHOPIFY_API_SECRET=$S_SHOPIFY_API_SECRET"$'\n'"URL=$S_URL"$'\n'"MAILER_ADDRESS=$S_MAILER_ADDRESS"$'\n'"MAILER_PORT=$S_MAILER_PORT"$'\n'"REDIS_URL=$S_REDIS_URL"$'\n'"MAILER_DOMAIN=$S_MAILER_DOMAIN"$'\n'"MAILER_USERNAME=$S_MAILER_USERNAME"$'\n'"MAILER_PASSWORD=$S_MAILER_PASSWORD"$'\n'"DO_SPACE_NAME=$S_DO_SPACE_NAME"$'\n'"DO_SPACES_API_KEY=$S_DO_SPACES_API_KEY"$'\n'"DO_SPACES_SECRET_KEY=$S_DO_SPACES_SECRET_KEY"$'\n'"DO_SPACES_REGION=$S_DO_SPACES_REGION"$'\n'"DO_ACL=$S_DO_ACL"$'\n'"DO_SPACES_ENDPOINT=$S_DO_SPACES_ENDPOINT"$'\n'"DO_SPACES_CDN_ENDPOINT=$S_DO_SPACES_CDN_ENDPOINT"$'\n'"AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"$'\n'"AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"> .env && sudo docker-compose config && sudo docker-compose up -d && sudo docker-compose run rails bundle exec rake db:create && sudo docker-compose run rails bundle exec rake db:migrate "
  environment:
    name: staging
    url: https://$DOMAIN
  <<: *only-default

sidekiq_app_deploy_staging:
  stage: staging
  variables:
    DOMAIN: $STAGING_DOMAIN
  script:
   - *ssh_definition
   - echo "$S1_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - *ssh_and_known_host_modification_definition
   - ssh kloc-admin@68.183.244.108 "cd shopify-kloc-low-inventory-notification-app/ && git pull"
   - ssh kloc-admin@68.183.244.108 "sudo env "TAG=$CI_COMMIT_SHORT_SHA" "DB_POOL_THREADS=$DB_POOL_THREADS" "LINA_DATABASE_NAME=$LINA_DATABASE_NAME" "LINA_DATABASE_USERNAME=$LINA_DATABASE_USERNAME" "LINA_DATABASE_PASSWORD=$LINA_DATABASE_PASSWORD" "HOST=$S_HOST" "DB_PORT=$DB_PORT" "SHOPIFY_API_KEY=$S_SHOPIFY_API_KEY" "SHOPIFY_API_SECRET=$S_SHOPIFY_API_SECRET" "URL=$S_URL" "MAILER_ADDRESS=$S_MAILER_ADDRESS" "MAILER_PORT=$S_MAILER_PORT" "REDIS_URL=$S_REDIS_URL" "MAILER_DOMAIN=$S_MAILER_DOMAIN" "MAILER_USERNAME=$S_MAILER_USERNAME" "MAILER_PASSWORD=$S_MAILER_PASSWORD" "DO_SPACE_NAME=$S_DO_SPACE_NAME" "DO_SPACES_API_KEY=$S_DO_SPACES_API_KEY" "DO_SPACES_SECRET_KEY=$S_DO_SPACES_SECRET_KEY" "DO_SPACES_REGION=$S_DO_SPACES_REGION" "DO_ACL=$S_DO_ACL" "DO_SPACES_ENDPOINT=$S_DO_SPACES_ENDPOINT" "DO_SPACES_CDN_ENDPOINT=$S_DO_SPACES_CDN_ENDPOINT" "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"> .env && sudo docker-compose config && sudo docker-compose up -d "
  environment:
    name: staging
    url: https://$DOMAIN
  <<: *only-default

deploy_production:
  stage: production
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
  script:
   - *ssh_definition
   - echo "$P_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - *ssh_and_known_host_modification_definition
   - ssh ubuntu@54.215.115.70 "cd shopify-kloc-raffle/ && git pull"
   - ssh ubuntu@54.215.115.70 "sudo echo "TAG=$CI_COMMIT_SHORT_SHA"$'\n'"RAILS_MAX_THREADS=$P_RAILS_MAX_THREADS"$'\n'"RAFFLE_DATABASE_NAME=$P_RAFFLE_DATABASE_NAME"$'\n'"RAFFLE_DATABASE_USERNAME=$P_RAFFLE_DATABASE_USERNAME"$'\n'"RAFFLE_DATABASE_PASSWORD=$P_RAFFLE_DATABASE_PASSWORD"$'\n'"HOST=$P_HOST"$'\n'"SHOPIFY_API_KEY=$P_SHOPIFY_API_KEY"$'\n'"SHOPIFY_API_SECRET=$P_SHOPIFY_API_SECRET"$'\n'"URL=$P_URL"$'\n'"SIDEKIQ_USERNAME=$SIDEKIQ_USERNAME"$'\n'"SIDEKIQ_PASSWORD=$SIDEKIQ_PASSWORD"$'\n'"DB_PORT=$DB_PORT"$'\n'"REDIS_URL=$P_REDIS_URL"$'\n'"KEY=$P_ENCRYPT_AND_DECRYPT_KEY"$'\n'"EMAIL_API=$AWS_API_KEY"$'\n'"EMAIL_PWD=$AWS_SECRET_KEY"$'\n'"EMAIL_SMTP=$AWS_SMTP"$'\n'"EMAIL=$P_EMAIL"$'\n'"DOMAIN=$P_DOMAIN"$'\n'"OTP_DURATION=$OTP_DURATION"$'\n'"INFLUXDB_NAME=$P_INFLUXDB_NAME"$'\n'"INFLUXDB_PORT=$INFLUXDB_PORT"$'\n'"INFLUXDB_HOST=$INFLUXDB_HOST"> .env && sudo docker-compose config && sudo docker-compose up -d && sudo docker-compose run rails bundle exec rake db:create && sudo docker-compose run rails bundle exec rake db:migrate " 
  environment:
    name: prodution
    url: https://$DOMAIN
  when: manual
  

.rollback_production:
  stage: production
  script:
   - *ssh_definition
   - echo "$P_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
   - *ssh_and_known_host_modification_definition
   - ssh ubuntu@54.215.115.70 "sudo docker service rollback loginotp_apdp"
  environment:
    name: prodution
  when: manual

